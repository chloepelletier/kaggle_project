import pandas as pd

training_set = pd.read_csv('data/processed/training_set.csv')
training_set.drop(['Unnamed: 0'], axis=1, inplace=True)

validation_set = pd.read_csv('data/processed/validation_set.csv')
validation_set.drop(['Unnamed: 0'], axis=1, inplace=True)

# MODEL ou on filtre par les caract√©ristiques pour avoir le points qui semble le plus similaire
# clustering sans le nb de visiteurs

def guessWhat(validation_set):
    print(training_set[(training_set.month.isin(validation_set.month)) 
    & (training_set.day.isin(validation_set.day))
    & (training_set.sportbad_closed.isin(validation_set.sportbad_closed))
    & (training_set.freizeitbad_closed.isin(validation_set.freizeitbad_closed))
    & (training_set.sauna_closed.isin(validation_set.sauna_closed))
    & (training_set.kursbecken_closed.isin(validation_set.kursbecken_closed))
    & (training_set.event.isin(validation_set.event))
    & (training_set.school_holiday.isin(validation_set.school_holiday))
    & (training_set.wind_speed_max.isin(validation_set.wind_speed_max))
    & (training_set.sunshine_radiation.isin(validation_set.sunshine_radiation))
    & (training_set.precipitation.isin(validation_set.precipitation))
    & (training_set.snow_height.isin(validation_set.snow_height))
    ].visitors_pool_total)

guessWhat(validation_set.head(1))

#486
#sportbad_closed, freizeitbad_closed, sauna_closed, kursbecken_closed, event, sloop_days, school_holiday, bank_holiday, Price, temperature, wind_speed_max
#, sunshine_radiation, precipitation, snow_height, month, day